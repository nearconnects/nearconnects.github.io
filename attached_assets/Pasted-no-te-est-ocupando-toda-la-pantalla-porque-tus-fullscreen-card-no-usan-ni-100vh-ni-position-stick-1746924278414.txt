no te está ocupando toda la pantalla porque tus .fullscreen-card no usan ni 100vh ni position: sticky. Te lo corrijo rápido para que solo haya UNA tarjeta por pantalla y luego, al llegar a la última, aparezcan todas en horizontal.

1️⃣ HTML (reemplaza tu .metrics-grid por esto)
html
Copiar
Editar
<section id="scroll-insights">
  <!-- Cada “metric-card” pasa a llamarse fullscreen-card -->
  <div class="fullscreen-card" data-title="Total Respondents" data-value="73" data-desc="The total number of participants who completed our logistics optimization survey.">
    <i class="fas fa-users"></i>
  </div>
  <div class="fullscreen-card" data-title="Drivers with Empty Cargo" data-value="34" data-percent="72%" data-desc="Drivers who returned with empty cargo space.">
    <i class="fas fa-truck"></i>
  </div>
  <div class="fullscreen-card" data-title="Drivers Willing to Deliver" data-value="30" data-percent="65%" data-desc="Drivers interested in participating in the NEAR delivery network.">
    <i class="fas fa-check-circle"></i>
  </div>
  <div class="fullscreen-card" data-title="Very Willing Customers" data-value="26" data-percent="60%" data-desc="Customers very keen on using sustainable delivery options.">
    <i class="fas fa-thumbs-up"></i>
  </div>
</section>

<section id="horizontal-group" class="hidden">
  <!-- Se rellena con JS al final -->
</section>
2️⃣ CSS (insights.css)
css
Copiar
Editar
/* ----------------------------------------
   SLIDES VERTICALES A PANTALLA COMPLETA
   ---------------------------------------- */
#scroll-insights {
  position: relative;
}

.fullscreen-card {
  position: sticky;
  top: 0;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #f9fafd;
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  text-align: center;
}
.fullscreen-card.visible {
  opacity: 1;
  transform: translateY(0);
}

.fullscreen-card i {
  font-size: 3rem;
  margin-bottom: 1rem;
  color: #2e5bff;
  filter: drop-shadow(0 0 8px rgba(46, 91, 255, .3));
}
.fullscreen-card h3,
.fullscreen-card p {
  margin: .5rem 0;
}

/* ----------------------------------------
   RESUMEN HORIZONTAL
   ---------------------------------------- */
#horizontal-group {
  display: flex;
  gap: 1.5rem;
  padding: 2rem;
  overflow-x: auto;
  background: #ffffff;
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}
#horizontal-group.show {
  opacity: 1;
  transform: translateY(0);
}
#horizontal-group .card {
  flex: 0 0 250px;
  background: #fbfcfe;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.05);
  padding: 1.5rem;
  text-align: center;
}
#horizontal-group .card i {
  font-size: 2rem;
  color: #2e5bff;
  margin-bottom: .5rem;
}
#horizontal-group .card strong {
  font-size: 2rem;
  display: block;
  margin: .5rem 0;
}
#horizontal-group .card p {
  margin: .25rem 0;
  color: #333;
}

/* Oculta mientras no toque */
.hidden { display: none; }
3️⃣ JavaScript (scroll-metrics.js)
js
Copiar
Editar
document.addEventListener('DOMContentLoaded', () => {
  const slides = document.querySelectorAll('.fullscreen-card');
  const summary = document.getElementById('horizontal-group');
  let shownCount = 0;

  // IntersectionObserver simple
  const io = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const slide = entry.target;
        if (!slide.classList.contains('visible')) {
          slide.classList.add('visible');
          shownCount++;

          // Cuando hemos mostrado la última slide...
          if (shownCount === slides.length) {
            setTimeout(buildHorizontal, 500);
          }
        }
      }
    });
  }, { threshold: 0.6 });

  slides.forEach(s => io.observe(s));

  function buildHorizontal() {
    // Rellenamos el contenedor y lo mostramos
    summary.innerHTML = '';
    slides.forEach(slide => {
      const title = slide.dataset.title;
      const val = slide.dataset.value;
      const pct = slide.dataset.percent || '';
      const desc = slide.dataset.desc;
      const iconHTML = slide.querySelector('i').outerHTML;

      summary.innerHTML += `
        <div class="card">
          ${iconHTML}
          <h4>${title}</h4>
          <strong>${val}</strong>
          ${pct ? `<p style="color: #28a745;">${pct}</p>` : ''}
          <p style="font-size: .9rem; color: #555;">${desc}</p>
        </div>`;
    });

    summary.classList.remove('hidden');
    summary.classList.add('show');
  }
});
